<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:jdbc.properties" />

    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!--初始化大小、最大、最小-->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="10" />

        <!--获取连接等待超时的时间-->
        <property name="maxWait" value="10000" />

        <!--间隔多久才进行一次检测，检测需要关闭的空闲连接-->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!--一个连接在连接池中最小生存时间-->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />

        <!--建议配置为TRUE,防止取到的连接不可用-->
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="false" />

        <!--打开PSCache，并且指定每个连接上PSCache的大小-->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="20" />

        <!--配置提交方式，默认是True,可以不用配置-->
        <property name="defaultAutoCommit" value="true" />

        <!--验证连接有效与否的SQL，不同的数据配置不同-->
        <property name="validationQuery" value="select 1" />

        <!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
            监控统计用的filter:stat;
            日志用的filter:log4j;
            防御sql注入的filter:wall;
         -->
        <property name="filters" value="stat" />
    </bean>

    <!-- 配置事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource" />
    </bean>

    <!--创建SqlSessionFactory，并指定数据源-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="dataSource" ref="druidDataSource" />
    </bean>

    <!--开启事物注解-->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>