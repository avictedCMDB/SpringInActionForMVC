<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:websoket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

    <!--配置视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" ></property>
        <property name="suffix" value=".html" ></property>
    </bean>

    <!--如果前端使用Thymeleaf模板引擎，配置Thymeleaf试图解析器-->
    <!--<bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="html5" />
    </bean>
    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine" >
        <property name="templateResolver" ref="templateResolver" />
    </bean>
    <bean id="thymeleafViewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        &lt;!&ndash;解决中文乱码&ndash;&gt;
        <property name="characterEncoding" value="UTF-8"/>
    </bean>-->

    <bean id="standardMultipart" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"></bean>

    <bean id="commonMultipart" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8" />
        <property name="maxUploadSize" value="10485760000" />
        <property name="maxInMemorySize" value="10960" />
    </bean>

    <!--<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean" >
        <property name="defaultContentType" value="application/json" />
    </bean>-->
    <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes" >
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 配置JMS连接工厂  以便连接到ActiveMQ-->
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory" >
        <property name="brokerURL" value="tcp://localhost:61616" />
    </bean>
    <!-- 声明ActiveMQ消息目的地 -->
    <bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="spitter.queue" />
    </bean>
    <bean id="topic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="spitter.topic" />
    </bean>

    <!-- 配置消息转换器 [如果不配置，则使用默认的SimpleMessageConverter] -->
    <bean id="messageConverter" class="org.springframework.jms.support.converter.MappingJackson2MessageConverter" />

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="connectionFactory" />
        <!--<property name="defaultDestinationName" value="spittle.alert.queue" />-->
        <!-- 设置默认的发送地址 -->
        <property name="defaultDestination" ref="topic" />
        <property name="messageConverter" ref="messageConverter" />
     </bean>

    <!-- 配置消息监听器 -->
    <bean id="spittleHandler" class="cn.avicted.restAPI.handler.SpittleAlertHandler" />
    <jms:listener-container connection-factory="connectionFactory" ><!--消息监听容器-->
        <jms:listener destination="spitter.queue" ref="spittleHandler" method="handleSpittleAlert" /><!--消息监听器-->
    </jms:listener-container>


    <!-- 配置导出基于JMS的服务 -->
    <bean id="alertServiceExporter" class="org.springframework.jms.remoting.JmsInvokerServiceExporter">
        <property name="service" value="cn.avicted.restAPI.serviceImpl.AlertServiceImpl" />
        <property name="serviceInterface" value="cn.avicted.restAPI.service.AlertService" />
    </bean>
    <!--配置JMS监听器-->
    <jms:listener-container connection-factory="connectionFactory">
        <jms:listener destination="spitter.queue" ref="alertServiceExporter" />
    </jms:listener-container>

    <bean id="alertService" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
        <property name="connectionFactory" value="connectionFactory" />
        <property name="queueName" value="spittle.queue" />
        <property name="serviceInterface" value="cn.avicted.restAPI.service.AlertService" />
    </bean>

    <!--配置webSocket-->
    <bean id="marcoHandler" class="cn.avicted.webSocket.controller.MarcoHandler" />
    <websoket:handlers>
        <websoket:mapping path="/marco" handler="marcoHandler"/>
        <!--<websoket:sockjs />-->
    </websoket:handlers>

    <!--配置STOMP-->
    <bean id="mappingJackson2MessageConverter" class="org.springframework.messaging.converter.MappingJackson2MessageConverter" />
    <websoket:message-broker application-destination-prefix="/app">
        <websoket:stomp-endpoint path="/stomp">
            <websoket:sockjs />
        </websoket:stomp-endpoint>

        <websoket:stomp-broker-relay prefix="/topic,/queue"
                relay-host="remoteServerAddress" relay-port="56236" client-login="ffasfs" client-passcode="12345678"/>
    </websoket:message-broker>




</beans>